/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, LROperation, PaginationCallback, LocationsClient, LocationProtos } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Service for managing site search related resources.
 * @class
 * @memberof v1alpha
 */
export declare class SiteSearchEngineServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    locationsClient: LocationsClient;
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    operationsClient: gax.OperationsClient;
    siteSearchEngineServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of SiteSearchEngineServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new SiteSearchEngineServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Gets the
     * {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of
     *   {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine},
     *   such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     *
     *   If the caller does not have permission to access the [SiteSearchEngine],
     *   regardless of whether or not it exists, a PERMISSION_DENIED error is
     *   returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.get_site_search_engine.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_GetSiteSearchEngine_async
     */
    getSiteSearchEngine(request?: protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1alpha.ISiteSearchEngine,
        (protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest | undefined),
        {} | undefined
    ]>;
    getSiteSearchEngine(request: protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest, options: CallOptions, callback: Callback<protos.google.cloud.discoveryengine.v1alpha.ISiteSearchEngine, protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest | null | undefined, {} | null | undefined>): void;
    getSiteSearchEngine(request: protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest, callback: Callback<protos.google.cloud.discoveryengine.v1alpha.ISiteSearchEngine, protos.google.cloud.discoveryengine.v1alpha.IGetSiteSearchEngineRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Full resource name of
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
     *
     *   If the caller does not have permission to access the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, regardless
     *   of whether or not it exists, a PERMISSION_DENIED error is returned.
     *
     *   If the requested
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} does not
     *   exist, a NOT_FOUND error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.get_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_GetTargetSite_async
     */
    getTargetSite(request?: protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1alpha.ITargetSite,
        (protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest | undefined),
        {} | undefined
    ]>;
    getTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest, options: CallOptions, callback: Callback<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest | null | undefined, {} | null | undefined>): void;
    getTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest, callback: Callback<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.IGetTargetSiteRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Parent resource name of
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     * @param {google.cloud.discoveryengine.v1alpha.TargetSite} request.targetSite
     *   Required. The {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}
     *   to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.create_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_CreateTargetSite_async
     */
    createTargetSite(request?: protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    createTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    createTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.ICreateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `createTargetSite()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.create_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_CreateTargetSite_async
     */
    checkCreateTargetSiteProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.TargetSite, protos.google.cloud.discoveryengine.v1alpha.CreateTargetSiteMetadata>>;
    /**
     * Creates {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} in a
     * batch.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource shared by all TargetSites being created.
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     *   The parent field in the CreateBookRequest messages must either be empty or
     *   match this field.
     * @param {number[]} request.requests
     *   Required. The request message specifying the resources to create.
     *   A maximum of 20 TargetSites can be created in a batch.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.batch_create_target_sites.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchCreateTargetSites_async
     */
    batchCreateTargetSites(request?: protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSiteMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    batchCreateTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    batchCreateTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchCreateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `batchCreateTargetSites()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.batch_create_target_sites.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchCreateTargetSites_async
     */
    checkBatchCreateTargetSitesProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.BatchCreateTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.BatchCreateTargetSiteMetadata>>;
    /**
     * Updates a {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.discoveryengine.v1alpha.TargetSite} request.targetSite
     *   Required. The target site to update.
     *   If the caller does not have permission to update the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, regardless
     *   of whether or not it exists, a PERMISSION_DENIED error is returned.
     *
     *   If the {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} to
     *   update does not exist, a NOT_FOUND error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.update_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_UpdateTargetSite_async
     */
    updateTargetSite(request?: protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    updateTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    updateTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.ITargetSite, protos.google.cloud.discoveryengine.v1alpha.IUpdateTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `updateTargetSite()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.update_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_UpdateTargetSite_async
     */
    checkUpdateTargetSiteProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.TargetSite, protos.google.cloud.discoveryengine.v1alpha.UpdateTargetSiteMetadata>>;
    /**
     * Deletes a {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Full resource name of
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
     *
     *   If the caller does not have permission to access the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}, regardless
     *   of whether or not it exists, a PERMISSION_DENIED error is returned.
     *
     *   If the requested
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} does not
     *   exist, a NOT_FOUND error is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.delete_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_DeleteTargetSite_async
     */
    deleteTargetSite(request?: protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    deleteTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteRequest, options: CallOptions, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    deleteTargetSite(request: protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteRequest, callback: Callback<LROperation<protos.google.protobuf.IEmpty, protos.google.cloud.discoveryengine.v1alpha.IDeleteTargetSiteMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `deleteTargetSite()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.delete_target_site.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_DeleteTargetSite_async
     */
    checkDeleteTargetSiteProgress(name: string): Promise<LROperation<protos.google.protobuf.Empty, protos.google.cloud.discoveryengine.v1alpha.DeleteTargetSiteMetadata>>;
    /**
     * Upgrade from basic site search to advanced site search.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. Full resource name of the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine},
     *   such as
     *   `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.enable_advanced_site_search.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_EnableAdvancedSiteSearch_async
     */
    enableAdvancedSiteSearch(request?: protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    enableAdvancedSiteSearch(request: protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    enableAdvancedSiteSearch(request: protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IEnableAdvancedSiteSearchMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `enableAdvancedSiteSearch()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.enable_advanced_site_search.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_EnableAdvancedSiteSearch_async
     */
    checkEnableAdvancedSiteSearchProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.EnableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.EnableAdvancedSiteSearchMetadata>>;
    /**
     * Downgrade from advanced site search to basic site search.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. Full resource name of the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine},
     *   such as
     *   `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.disable_advanced_site_search.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_DisableAdvancedSiteSearch_async
     */
    disableAdvancedSiteSearch(request?: protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    disableAdvancedSiteSearch(request: protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    disableAdvancedSiteSearch(request: protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.IDisableAdvancedSiteSearchMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `disableAdvancedSiteSearch()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.disable_advanced_site_search.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_DisableAdvancedSiteSearch_async
     */
    checkDisableAdvancedSiteSearchProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.DisableAdvancedSiteSearchResponse, protos.google.cloud.discoveryengine.v1alpha.DisableAdvancedSiteSearchMetadata>>;
    /**
     * Request on-demand recrawl for a list of URIs.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. Full resource name of the
     *   {@link protos.google.cloud.discoveryengine.v1alpha.SiteSearchEngine|SiteSearchEngine},
     *   such as
     *   `projects/* /locations/* /collections/* /dataStores/* /siteSearchEngine`.
     * @param {string[]} request.uris
     *   Required. List of URIs to crawl. At most 10K URIs are supported, otherwise
     *   an INVALID_ARGUMENT error is thrown. Each URI should match at least one
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} in
     *   `site_search_engine`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.recrawl_uris.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_RecrawlUris_async
     */
    recrawlUris(request?: protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisResponse, protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    recrawlUris(request: protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisResponse, protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    recrawlUris(request: protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisResponse, protos.google.cloud.discoveryengine.v1alpha.IRecrawlUrisMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `recrawlUris()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.recrawl_uris.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_RecrawlUris_async
     */
    checkRecrawlUrisProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.RecrawlUrisResponse, protos.google.cloud.discoveryengine.v1alpha.RecrawlUrisMetadata>>;
    /**
     * Verify target sites' ownership and validity.
     * This API sends all the target sites under site search engine for
     * verification.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource shared by all TargetSites being verified.
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     *   a long running operation. Its `promise()` method returns a promise
     *   you can `await` for.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.batch_verify_target_sites.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchVerifyTargetSites_async
     */
    batchVerifyTargetSites(request?: protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesRequest, options?: CallOptions): Promise<[
        LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesMetadata>,
        protos.google.longrunning.IOperation | undefined,
        {} | undefined
    ]>;
    batchVerifyTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesRequest, options: CallOptions, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    batchVerifyTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesRequest, callback: Callback<LROperation<protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.IBatchVerifyTargetSitesMetadata>, protos.google.longrunning.IOperation | null | undefined, {} | null | undefined>): void;
    /**
     * Check the status of the long running operation returned by `batchVerifyTargetSites()`.
     * @param {String} name
     *   The operation name that will be passed.
     * @returns {Promise} - The promise which resolves to an object.
     *   The decoded operation object has result and metadata field to get information from.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.batch_verify_target_sites.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchVerifyTargetSites_async
     */
    checkBatchVerifyTargetSitesProgress(name: string): Promise<LROperation<protos.google.cloud.discoveryengine.v1alpha.BatchVerifyTargetSitesResponse, protos.google.cloud.discoveryengine.v1alpha.BatchVerifyTargetSitesMetadata>>;
    /**
     * Gets a list of
     * {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}s.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent site search engine resource name, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}s under this
     *   site search engine, regardless of whether or not this branch exists, a
     *   PERMISSION_DENIED error is returned.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListTargetSites` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListTargetSites`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listTargetSitesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTargetSites(request?: protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1alpha.ITargetSite[],
        protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest | null,
        protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesResponse
    ]>;
    listTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesResponse | null | undefined, protos.google.cloud.discoveryengine.v1alpha.ITargetSite>): void;
    listTargetSites(request: protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesResponse | null | undefined, protos.google.cloud.discoveryengine.v1alpha.ITargetSite>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent site search engine resource name, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}s under this
     *   site search engine, regardless of whether or not this branch exists, a
     *   PERMISSION_DENIED error is returned.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListTargetSites` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListTargetSites`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listTargetSitesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTargetSitesStream(request?: protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listTargetSites`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent site search engine resource name, such as
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     *
     *   If the caller does not have permission to list
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}s under this
     *   site search engine, regardless of whether or not this branch exists, a
     *   PERMISSION_DENIED error is returned.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `ListTargetSites` call.
     *   Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to `ListTargetSites`
     *   must match the call that provided the page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.list_target_sites.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_ListTargetSites_async
     */
    listTargetSitesAsync(request?: protos.google.cloud.discoveryengine.v1alpha.IListTargetSitesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.discoveryengine.v1alpha.ITargetSite>;
    /**
     * Returns list of target sites with its domain verification status.
     * This method can only be called under data store with BASIC_SITE_SEARCH
     * state at the moment.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. The site search engine resource under which we fetch all the
     *   domain verification status.
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `FetchDomainVerificationStatus`
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `FetchDomainVerificationStatus` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `fetchDomainVerificationStatusAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    fetchDomainVerificationStatus(request?: protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, options?: CallOptions): Promise<[
        protos.google.cloud.discoveryengine.v1alpha.ITargetSite[],
        protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest | null,
        protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusResponse
    ]>;
    fetchDomainVerificationStatus(request: protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusResponse | null | undefined, protos.google.cloud.discoveryengine.v1alpha.ITargetSite>): void;
    fetchDomainVerificationStatus(request: protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, callback: PaginationCallback<protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusResponse | null | undefined, protos.google.cloud.discoveryengine.v1alpha.ITargetSite>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. The site search engine resource under which we fetch all the
     *   domain verification status.
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `FetchDomainVerificationStatus`
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `FetchDomainVerificationStatus` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `fetchDomainVerificationStatusAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    fetchDomainVerificationStatusStream(request?: protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `fetchDomainVerificationStatus`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.siteSearchEngine
     *   Required. The site search engine resource under which we fetch all the
     *   domain verification status.
     *   `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
     * @param {number} request.pageSize
     *   Requested page size. Server may return fewer items than requested. If
     *   unspecified, server will pick an appropriate default. The maximum value is
     *   1000; values above 1000 will be coerced to 1000.
     *
     *   If this field is negative, an INVALID_ARGUMENT error is returned.
     * @param {string} request.pageToken
     *   A page token, received from a previous `FetchDomainVerificationStatus`
     *   call. Provide this to retrieve the subsequent page.
     *
     *   When paginating, all other parameters provided to
     *   `FetchDomainVerificationStatus` must match the call that provided the page
     *   token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.discoveryengine.v1alpha.TargetSite|TargetSite}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1alpha/site_search_engine_service.fetch_domain_verification_status.js</caption>
     * region_tag:discoveryengine_v1alpha_generated_SiteSearchEngineService_FetchDomainVerificationStatus_async
     */
    fetchDomainVerificationStatusAsync(request?: protos.google.cloud.discoveryengine.v1alpha.IFetchDomainVerificationStatusRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.discoveryengine.v1alpha.ITargetSite>;
    /**
     * Gets information about a location.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Resource name for the location.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const [response] = await client.getLocation(request);
     * ```
     */
    getLocation(request: LocationProtos.google.cloud.location.IGetLocationRequest, options?: gax.CallOptions | Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>, callback?: Callback<LocationProtos.google.cloud.location.ILocation, LocationProtos.google.cloud.location.IGetLocationRequest | null | undefined, {} | null | undefined>): Promise<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Lists information about the supported locations for this service. Returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   The resource that owns the locations collection, if applicable.
     * @param {string} request.filter
     *   The standard list filter.
     * @param {number} request.pageSize
     *   The standard list page size.
     * @param {string} request.pageToken
     *   The standard list page token.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example
     * ```
     * const iterable = client.listLocationsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     * ```
     */
    listLocationsAsync(request: LocationProtos.google.cloud.location.IListLocationsRequest, options?: CallOptions): AsyncIterable<LocationProtos.google.cloud.location.ILocation>;
    /**
     * Gets the latest state of a long-running operation.  Clients can use this
     * method to poll the operation result at intervals as recommended by the API
     * service.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     *   for the details.
     * @param {function(?Error, ?Object)=} callback
     *   The function which will be called with the result of the API call.
     *
     *   The second parameter to the callback is an object representing
     *   {@link google.longrunning.Operation | google.longrunning.Operation}.
     * @return {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing
     * {@link google.longrunning.Operation | google.longrunning.Operation}.
     * The promise has a method named "cancel" which cancels the ongoing API call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * const name = '';
     * const [response] = await client.getOperation({name});
     * // doThingsWith(response)
     * ```
     */
    getOperation(request: protos.google.longrunning.GetOperationRequest, options?: gax.CallOptions | Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.longrunning.Operation, protos.google.longrunning.GetOperationRequest, {} | null | undefined>): Promise<[protos.google.longrunning.Operation]>;
    /**
     * Lists operations that match the specified filter in the request. If the
     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
     *
     * For-await-of syntax is used with the iterable to recursively get response element on-demand.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation collection.
     * @param {string} request.filter - The standard list filter.
     * @param {number=} request.pageSize -
     *   The maximum number of resources contained in the underlying API
     *   response. If page streaming is performed per-resource, this
     *   parameter does not affect the return value. If page streaming is
     *   performed per-page, this determines the maximum number of
     *   resources in a page.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     *   e.g, timeout, retries, paginations, etc. See {@link
     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     *   details.
     * @returns {Object}
     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * for await (const response of client.listOperationsAsync(request));
     * // doThingsWith(response)
     * ```
     */
    listOperationsAsync(request: protos.google.longrunning.ListOperationsRequest, options?: gax.CallOptions): AsyncIterable<protos.google.longrunning.ListOperationsResponse>;
    /**
     * Starts asynchronous cancellation on a long-running operation.  The server
     * makes a best effort to cancel the operation, but success is not
     * guaranteed.  If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
     * {@link Operations.GetOperation} or
     * other methods to check whether the cancellation succeeded or whether the
     * operation completed despite cancellation. On successful cancellation,
     * the operation is not deleted; instead, it becomes an operation with
     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
     * 1, corresponding to `Code.CANCELLED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be cancelled.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
     * details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.cancelOperation({name: ''});
     * ```
     */
    cancelOperation(request: protos.google.longrunning.CancelOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.CancelOperationRequest, {} | undefined | null>, callback?: Callback<protos.google.longrunning.CancelOperationRequest, protos.google.protobuf.Empty, {} | undefined | null>): Promise<protos.google.protobuf.Empty>;
    /**
     * Deletes a long-running operation. This method indicates that the client is
     * no longer interested in the operation result. It does not cancel the
     * operation. If the server doesn't support this method, it returns
     * `google.rpc.Code.UNIMPLEMENTED`.
     *
     * @param {Object} request - The request object that will be sent.
     * @param {string} request.name - The name of the operation resource to be deleted.
     * @param {Object=} options
     *   Optional parameters. You can override the default settings for this call,
     * e.g, timeout, retries, paginations, etc. See {@link
     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
     * for the details.
     * @param {function(?Error)=} callback
     *   The function which will be called with the result of the API call.
     * @return {Promise} - The promise which resolves when API call finishes.
     *   The promise has a method named "cancel" which cancels the ongoing API
     * call.
     *
     * @example
     * ```
     * const client = longrunning.operationsClient();
     * await client.deleteOperation({name: ''});
     * ```
     */
    deleteOperation(request: protos.google.longrunning.DeleteOperationRequest, options?: gax.CallOptions | Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>, callback?: Callback<protos.google.protobuf.Empty, protos.google.longrunning.DeleteOperationRequest, {} | null | undefined>): Promise<protos.google.protobuf.Empty>;
    /**
     * Return a fully-qualified engine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @returns {string} Resource name string.
     */
    enginePath(project: string, location: string, collection: string, engine: string): string;
    /**
     * Parse the project from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEngineName(engineName: string): string | number;
    /**
     * Parse the location from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEngineName(engineName: string): string | number;
    /**
     * Parse the collection from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromEngineName(engineName: string): string | number;
    /**
     * Parse the engine from Engine resource.
     *
     * @param {string} engineName
     *   A fully-qualified path representing Engine resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromEngineName(engineName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStore resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStorePath(project: string, location: string, collection: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStore resource.
     *
     * @param {string} projectLocationCollectionDataStoreName
     *   A fully-qualified path representing project_location_collection_data_store resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreName(projectLocationCollectionDataStoreName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreBranchDocument resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreBranchDocumentPath(project: string, location: string, collection: string, dataStore: string, branch: string, document: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the branch from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the document from ProjectLocationCollectionDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationCollectionDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_collection_data_store_branch_document resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationCollectionDataStoreBranchDocumentName(projectLocationCollectionDataStoreBranchDocumentName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreConversationPath(project: string, location: string, collection: string, dataStore: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationCollectionDataStoreConversation resource.
     *
     * @param {string} projectLocationCollectionDataStoreConversationName
     *   A fully-qualified path representing project_location_collection_data_store_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationCollectionDataStoreConversationName(projectLocationCollectionDataStoreConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSchema resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} schema
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSchemaPath(project: string, location: string, collection: string, dataStore: string, schema: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Parse the schema from ProjectLocationCollectionDataStoreSchema resource.
     *
     * @param {string} projectLocationCollectionDataStoreSchemaName
     *   A fully-qualified path representing project_location_collection_data_store_schema resource.
     * @returns {string} A string representing the schema.
     */
    matchSchemaFromProjectLocationCollectionDataStoreSchemaName(projectLocationCollectionDataStoreSchemaName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSiteSearchEngine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSiteSearchEnginePath(project: string, location: string, collection: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSiteSearchEngineName(projectLocationCollectionDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionDataStoreSiteSearchEngineTargetSite resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} data_store
     * @param {string} target_site
     * @returns {string} Resource name string.
     */
    projectLocationCollectionDataStoreSiteSearchEngineTargetSitePath(project: string, location: string, collection: string, dataStore: string, targetSite: string): string;
    /**
     * Parse the project from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the target_site from ProjectLocationCollectionDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_collection_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the target_site.
     */
    matchTargetSiteFromProjectLocationCollectionDataStoreSiteSearchEngineTargetSiteName(projectLocationCollectionDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Return a fully-qualified projectLocationCollectionEngineConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} collection
     * @param {string} engine
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationCollectionEngineConversationPath(project: string, location: string, collection: string, engine: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the collection from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the collection.
     */
    matchCollectionFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the engine from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the engine.
     */
    matchEngineFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationCollectionEngineConversation resource.
     *
     * @param {string} projectLocationCollectionEngineConversationName
     *   A fully-qualified path representing project_location_collection_engine_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationCollectionEngineConversationName(projectLocationCollectionEngineConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStore resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationDataStorePath(project: string, location: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStore resource.
     *
     * @param {string} projectLocationDataStoreName
     *   A fully-qualified path representing project_location_data_store resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreName(projectLocationDataStoreName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreBranchDocument resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} branch
     * @param {string} document
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreBranchDocumentPath(project: string, location: string, dataStore: string, branch: string, document: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the branch from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the branch.
     */
    matchBranchFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Parse the document from ProjectLocationDataStoreBranchDocument resource.
     *
     * @param {string} projectLocationDataStoreBranchDocumentName
     *   A fully-qualified path representing project_location_data_store_branch_document resource.
     * @returns {string} A string representing the document.
     */
    matchDocumentFromProjectLocationDataStoreBranchDocumentName(projectLocationDataStoreBranchDocumentName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreConversation resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} conversation
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreConversationPath(project: string, location: string, dataStore: string, conversation: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Parse the conversation from ProjectLocationDataStoreConversation resource.
     *
     * @param {string} projectLocationDataStoreConversationName
     *   A fully-qualified path representing project_location_data_store_conversation resource.
     * @returns {string} A string representing the conversation.
     */
    matchConversationFromProjectLocationDataStoreConversationName(projectLocationDataStoreConversationName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSchema resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} schema
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSchemaPath(project: string, location: string, dataStore: string, schema: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Parse the schema from ProjectLocationDataStoreSchema resource.
     *
     * @param {string} projectLocationDataStoreSchemaName
     *   A fully-qualified path representing project_location_data_store_schema resource.
     * @returns {string} A string representing the schema.
     */
    matchSchemaFromProjectLocationDataStoreSchemaName(projectLocationDataStoreSchemaName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSiteSearchEngine resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSiteSearchEnginePath(project: string, location: string, dataStore: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSiteSearchEngine resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSiteSearchEngineName(projectLocationDataStoreSiteSearchEngineName: string): string | number;
    /**
     * Return a fully-qualified projectLocationDataStoreSiteSearchEngineTargetSite resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} data_store
     * @param {string} target_site
     * @returns {string} Resource name string.
     */
    projectLocationDataStoreSiteSearchEngineTargetSitePath(project: string, location: string, dataStore: string, targetSite: string): string;
    /**
     * Parse the project from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the location from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the data_store from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the data_store.
     */
    matchDataStoreFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Parse the target_site from ProjectLocationDataStoreSiteSearchEngineTargetSite resource.
     *
     * @param {string} projectLocationDataStoreSiteSearchEngineTargetSiteName
     *   A fully-qualified path representing project_location_data_store_siteSearchEngine_target_site resource.
     * @returns {string} A string representing the target_site.
     */
    matchTargetSiteFromProjectLocationDataStoreSiteSearchEngineTargetSiteName(projectLocationDataStoreSiteSearchEngineTargetSiteName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
